{"version":3,"file":"norwegian-id-e7e0aa71.js","sources":["../../../src/lib/norwegian-id-generator.ts","../../../src/routes/norwegian-id.tsx"],"sourcesContent":["export enum Gender {\n  Male = \"male\",\n  Female = \"female\",\n}\n\nexport function parse(id: string)  {\n  const zoomersAjustment = Number(id.slice(6, 9)) >= 500 ? 100 : 0;\n  const day = Number(id.slice(0, 2));\n  const month = Number(id.slice(2, 4)) - 1;\n  const year = 1900 + zoomersAjustment + Number(id.slice(4, 6));\n\n  const gender = Number(id.slice(8, 9)) % 2 === 0 ? Gender.Female : Gender.Male;\n\n  return { birthday: new Date(year, month, day), gender }\n}\n\nexport function validateNorwegianId(id: string) {\n  if (!id) {\n    return undefined;\n  }\n\n  if (id.length < 9) {\n    return \"\";\n  }\n\n  const digits = id.slice(0, 9);\n\n  return `${digits}${checksum(digits).join(\"\")}`;\n};\n\nexport function randomDate(\n  between = { from: new Date(1900, 1, 1), to: new Date() }\n) {\n  return new Date(\n    between.from.getTime() +\n      Math.random() * (between.to.getTime() - between.from.getTime())\n  );\n}\n\nexport function checksum(digits: string): [number, number] {\n  function calculateChecksum(digits: string, coefficients: number[]) {\n    const sum = digits\n      .split(\"\")\n      .reduce(\n        (acc, digit, index) => acc + coefficients[index] * parseInt(digit),\n        0\n      );\n\n    return (11 - (sum % 11)) % 11;\n  }\n\n  const checksum1 = calculateChecksum(digits, [3, 7, 6, 1, 8, 9, 4, 5, 2]);\n  const checksum2 = calculateChecksum(\n    `${digits}${checksum1}`,\n    [5, 4, 3, 2, 7, 6, 5, 4, 3, 2]\n  );\n\n  return [checksum1, checksum2]\n}\n\nexport default function norwegianIdGenerator(birthday: Date, gender?: Gender): string {\n  const zoomersAjustment = birthday.getFullYear() >= 2000 ? 500 : 0;\n  const randomLnr = Math.floor(500 * Math.random()) + zoomersAjustment;\n  const setLnrGender = (lnr: number, gender: Gender) => {\n    if (gender === Gender.Male) {\n      // return odd number\n      return lnr % 2 !== 0 ? lnr : lnr - 1;\n    }\n    if (gender === Gender.Female) {\n      // return even number\n      return lnr % 2 === 0 ? lnr : lnr - 1;\n    }\n  };\n\n  const digits = [\n    birthday.toLocaleDateString(\"en-GB\", {day: '2-digit', month: '2-digit', year: '2-digit'}).replaceAll(\"/\", ''),\n    String(gender ? setLnrGender(randomLnr, gender) : randomLnr).padStart(\n      3,\n      \"0\"\n    ),\n  ].join(\"\");\n\n  const [checksum1, checksum2] = checksum(digits);\n\n  const isValidLnr = checksum1 < 10 && checksum2 < 10;\n\n  if (!isValidLnr) {\n    return norwegianIdGenerator(birthday, gender);\n  }\n\n  // const [legacy] = legacyNorwegianIdGenerator(digits);\n  // if (`${digits}${checksum1}${checksum2}` != legacy) {\n  //   console.log(`${digits}${checksum1}${checksum2} - ${legacy}`);\n  // }\n\n  return `${digits}${checksum1}${checksum2}`;\n};\n\n\nfunction legacyNorwegianIdGenerator (digits: string) {\n  let c1, c2;\n  let validLnr = false;\n  c1 =\n    11 -\n    ((3 * digits[0] +\n      7 * digits[1] +\n      6 * digits[2] +\n      1 * digits[3] +\n      8 * digits[4] +\n      9 * digits[5] +\n      4 * digits[6] +\n      5 * digits[7] +\n      2 * digits[8]) %\n      11);\n  if (c1 === 11) c1 = 0;\n  c2 =\n    11 -\n    ((5 * digits[0] +\n      4 * digits[1] +\n      3 * digits[2] +\n      2 * digits[3] +\n      7 * digits[4] +\n      6 * digits[5] +\n      5 * digits[6] +\n      4 * digits[7] +\n      3 * digits[8] +\n      2 * c1) %\n      11);\n  if (c2 === 11) c2 = 0;\n  if (c1 < 10 && c2 < 10) {\n    validLnr = true;\n  }\n  return [`${digits}${c1}${c2}`, validLnr];\n};\n","import { For, Match, Switch, createEffect, createSignal } from \"solid-js\";\nimport InputWithCopy from \"~/components/InputWithCopy\";\nimport norwegianIdGenerator, {\n  Gender,\n  checksum,\n  parse,\n  randomDate,\n  validateNorwegianId,\n} from \"~/lib/norwegian-id-generator\";\n\nexport enum View {\n  Input = \"input\",\n  Text = \"text\",\n  Source = \"source\",\n}\n\nexport default function NorwegianId() {\n  const [view, setView] = createSignal(View.Input);\n  const [generateMore, setGenerateMore] = createSignal(0);\n  const [selectedDate, setSelectedDate] = createSignal(randomDate());\n  const [gender, setGender] = createSignal<Gender>();\n  const [norwegianId, setNorwegianId] = createSignal<string>(\n    norwegianIdGenerator(selectedDate(), gender())\n  );\n\n  createEffect(() => {\n    setNorwegianId(norwegianIdGenerator(selectedDate(), gender()));\n  });\n\n  const setManualNorwegianId = (id: string) => {\n    const { birthday, gender } = parse(id);\n\n    setGender(gender);\n    setSelectedDate(birthday);\n    setNorwegianId(id);\n  };\n\n  const toggleGender = () => {\n    const options = [undefined, Gender.Male, Gender.Female];\n    const newGenderIndex = (options.indexOf(gender()) + 1) % 3;\n\n    setGender(options[newGenderIndex]);\n  };\n\n  const validateMessage = () => {\n    const validId = validateNorwegianId(norwegianId());\n\n    return norwegianId() === validId\n      ? \"Valid\"\n      : `Invalid${validId ? ` (number should be ${validId})` : \"\"}`;\n  };\n\n  let birthdayPicker: any;\n\n  return (\n    <main class=\"container mx-auto p-4\">\n      <div class=\"flex justify-center my-10 text-3xl\">\n        <button type=\"button\" onClick={() => toggleGender()} class=\"p-1 w-8\">\n          {gender() === undefined && \"‚ö§\"}\n          {gender() === Gender.Male && \"‚ôÇÔ∏è\"}\n          {gender() === Gender.Female && \"‚ôÄÔ∏è\"}\n        </button>\n        <input\n          type=\"date\"\n          value={selectedDate().toLocaleDateString(\"en-CA\")}\n          onChange={(event) =>\n            event.target.value && setSelectedDate(new Date(event.target.value))\n          }\n          class=\"invisible w-0\"\n          ref={birthdayPicker}\n        />\n        <button\n          type=\"button\"\n          onClick={() => birthdayPicker.showPicker()}\n          class=\"p-1\"\n        >\n          üìÖ\n        </button>\n        <InputWithCopy\n          value={norwegianId()}\n          class={\"ring-2 ring-green-500 invalid:ring-red-500\"}\n          onChange={(event) => setManualNorwegianId(event.target.value)}\n          title={validateMessage()}\n          pattern={validateNorwegianId(norwegianId())}\n        />\n      </div>\n\n      <div class=\"mt-4\">\n        <div class=\"flex gap-3 mb-4\">\n          More...\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1000\"\n            value={generateMore()}\n            class=\"w-full\"\n            onInput={(event) => setGenerateMore(Number(event.target.value))}\n          />\n          <label\n            class={`border rounded px-2 cursor-pointer w-10 text-center ${\n              view() === View.Text ? \"bg-blue-600 text-white\" : \"\"\n            }`}\n            title=\"Multiline\"\n          >\n            üìã\n            <input\n              type=\"checkbox\"\n              class=\"hidden\"\n              checked={view() === View.Text}\n              onInput={(event) =>\n                setView(event.target.checked ? View.Text : View.Input)\n              }\n            />\n          </label>\n          <label\n            title=\"Get code\"\n            class={`border rounded px-2 cursor-pointer w-10 text-center ${\n              view() === View.Source ? \"bg-blue-600 text-white\" : \"\"\n            }`}\n          >\n            üí°\n            <input\n              type=\"checkbox\"\n              class=\"hidden\"\n              checked={view() === View.Source}\n              onInput={(event) =>\n                setView(event.target.checked ? View.Source : View.Input)\n              }\n            />\n          </label>\n        </div>\n        <div class=\"flex flex-wrap justify-left gap-3\">\n          <Switch>\n            <Match when={view() === View.Text}>\n              <textarea\n                class=\"w-full py-1 px-2 rounded-md max-h-[calc(100vh-16rem)] resize-none font-mono\"\n                rows={generateMore()}\n              >\n                {Array.from({ length: generateMore() }, () =>\n                  norwegianIdGenerator(randomDate(), gender())\n                ).join(\"\\n\")}\n              </textarea>\n            </Match>\n            <Match when={view() === View.Input}>\n              <For each={Array.from(Array(generateMore()).keys())}>\n                {() => (\n                  <InputWithCopy\n                    readOnly={true}\n                    value={\n                      norwegianIdGenerator(randomDate(), gender()) as string\n                    }\n                  />\n                )}\n              </For>\n            </Match>\n            <Match when={view() === View.Source}>\n              <textarea class=\"w-full py-1 px-2 rounded-md h-[calc(100vh-16rem)] resize-none font-mono\">\n                {[\n                  norwegianIdGenerator.toString(),\n                  checksum.toString(),\n                  randomDate.toString(),\n                  `return ${norwegianIdGenerator.name}(${randomDate.name}());`,\n                ].join(\"\\n\")}\n              </textarea>\n            </Match>\n          </Switch>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":["Gender","parse","id","zoomersAjustment","day","month","year","gender","validateNorwegianId","digits","checksum","randomDate","between","calculateChecksum","coefficients","acc","digit","index","checksum1","checksum2","norwegianIdGenerator","birthday","randomLnr","setLnrGender","lnr","View","NorwegianId","view","setView","createSignal","Input","generateMore","setGenerateMore","selectedDate","setSelectedDate","setGender","norwegianId","setNorwegianId","createEffect","setManualNorwegianId","toggleGender","options","undefined","Male","Female","newGenderIndex","indexOf","validateMessage","validId","birthdayPicker","_el$","_tmpl$3","_el$2","firstChild","_el$3","_el$4","nextSibling","_el$5","_el$6","_el$7","_el$8","_el$9","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","$$click","_$insert","_ref$","_$use","addEventListener","event","target","value","Date","showPicker","_$createComponent","InputWithCopy","onChange","title","pattern","$$input","Number","checked","Text","Source","Switch","children","Match","when","_el$17","_tmpl$","Array","from","length","join","_$effect","_$setAttribute","For","each","keys","readOnly","_el$18","_tmpl$2","toString","name","_p$","_v$","_v$2","_$className","toLocaleDateString","_$delegateEvents"],"mappings":"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"}